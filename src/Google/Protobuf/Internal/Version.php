<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/compiler/plugin.proto

namespace Google\Protobuf\Internal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBWire;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\InputStream;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The version number of protocol compiler.
 *
 * Generated from protobuf message <code>google.protobuf.compiler.Version</code>
 */
class Version extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional int32 major = 1;</code>
     */
    private $major = 0;
    private $has_major = false;
    /**
     * Generated from protobuf field <code>optional int32 minor = 2;</code>
     */
    private $minor = 0;
    private $has_minor = false;
    /**
     * Generated from protobuf field <code>optional int32 patch = 3;</code>
     */
    private $patch = 0;
    private $has_patch = false;
    /**
     * A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
     * be empty for mainline stable releases.
     *
     * Generated from protobuf field <code>optional string suffix = 4;</code>
     */
    private $suffix = '';
    private $has_suffix = false;

    public function __construct() {
        \GPBMetadata\Google\Protobuf\Internal\Compiler\Plugin::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>optional int32 major = 1;</code>
     * @return int
     */
    public function getMajor()
    {
        return $this->major;
    }

    /**
     * Generated from protobuf field <code>optional int32 major = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMajor($var)
    {
        GPBUtil::checkInt32($var);
        $this->major = $var;
        $this->has_major = true;

        return $this;
    }

    public function hasMajor()
    {
        return $this->has_major;
    }

    /**
     * Generated from protobuf field <code>optional int32 minor = 2;</code>
     * @return int
     */
    public function getMinor()
    {
        return $this->minor;
    }

    /**
     * Generated from protobuf field <code>optional int32 minor = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMinor($var)
    {
        GPBUtil::checkInt32($var);
        $this->minor = $var;
        $this->has_minor = true;

        return $this;
    }

    public function hasMinor()
    {
        return $this->has_minor;
    }

    /**
     * Generated from protobuf field <code>optional int32 patch = 3;</code>
     * @return int
     */
    public function getPatch()
    {
        return $this->patch;
    }

    /**
     * Generated from protobuf field <code>optional int32 patch = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPatch($var)
    {
        GPBUtil::checkInt32($var);
        $this->patch = $var;
        $this->has_patch = true;

        return $this;
    }

    public function hasPatch()
    {
        return $this->has_patch;
    }

    /**
     * A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
     * be empty for mainline stable releases.
     *
     * Generated from protobuf field <code>optional string suffix = 4;</code>
     * @return string
     */
    public function getSuffix()
    {
        return $this->suffix;
    }

    /**
     * A suffix for alpha, beta or rc release, e.g., "alpha-1", "rc2". It should
     * be empty for mainline stable releases.
     *
     * Generated from protobuf field <code>optional string suffix = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSuffix($var)
    {
        GPBUtil::checkString($var, True);
        $this->suffix = $var;
        $this->has_suffix = true;

        return $this;
    }

    public function hasSuffix()
    {
        return $this->has_suffix;
    }

}

